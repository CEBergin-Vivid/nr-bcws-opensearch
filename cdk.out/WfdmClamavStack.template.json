{
  "Resources": {
    "int-Queue4193FD3B": {
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-Queue/Resource"
      }
    },
    "int-ScanVPC274279B8": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "WfdmClamavStack/int-/ScanVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/Resource"
      }
    },
    "int-ScanVPCIsolatedSubnet1Subnet7556D83D": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/17",
        "VpcId": {
          "Ref": "int-ScanVPC274279B8"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet1/Subnet"
      }
    },
    "int-ScanVPCIsolatedSubnet1RouteTableEB7F0394": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "int-ScanVPC274279B8"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet1/RouteTable"
      }
    },
    "int-ScanVPCIsolatedSubnet1RouteTableAssociationAA9AED44": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "int-ScanVPCIsolatedSubnet1RouteTableEB7F0394"
        },
        "SubnetId": {
          "Ref": "int-ScanVPCIsolatedSubnet1Subnet7556D83D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet1/RouteTableAssociation"
      }
    },
    "int-ScanVPCIsolatedSubnet2Subnet0DC705B8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/17",
        "VpcId": {
          "Ref": "int-ScanVPC274279B8"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet2/Subnet"
      }
    },
    "int-ScanVPCIsolatedSubnet2RouteTableF6DB720F": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "int-ScanVPC274279B8"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet2/RouteTable"
      }
    },
    "int-ScanVPCIsolatedSubnet2RouteTableAssociation39194D2A": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "int-ScanVPCIsolatedSubnet2RouteTableF6DB720F"
        },
        "SubnetId": {
          "Ref": "int-ScanVPCIsolatedSubnet2Subnet0DC705B8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/IsolatedSubnet2/RouteTableAssociation"
      }
    },
    "int-ScanVPCFlowLogsIAMRole7282E719": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WfdmClamavStack/int-/ScanVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/FlowLogs/IAMRole/Resource"
      }
    },
    "int-ScanVPCFlowLogsIAMRoleDefaultPolicy0099E7CF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "int-ScanVPCFlowLogsLogGroup214BDC5B",
                  "Arn"
                ]
              }
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "int-ScanVPCFlowLogsIAMRole7282E719",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "int-ScanVPCFlowLogsIAMRoleDefaultPolicy0099E7CF",
        "Roles": [
          {
            "Ref": "int-ScanVPCFlowLogsIAMRole7282E719"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/FlowLogs/IAMRole/DefaultPolicy/Resource"
      }
    },
    "int-ScanVPCFlowLogsLogGroup214BDC5B": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731,
        "Tags": [
          {
            "Key": "Name",
            "Value": "WfdmClamavStack/int-/ScanVPC"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/FlowLogs/LogGroup/Resource"
      }
    },
    "int-ScanVPCFlowLogsFlowLogFBABBAD5": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "ResourceId": {
          "Ref": "int-ScanVPC274279B8"
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "int-ScanVPCFlowLogsIAMRole7282E719",
            "Arn"
          ]
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "int-ScanVPCFlowLogsLogGroup214BDC5B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WfdmClamavStack/int-/ScanVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/FlowLogs/FlowLog"
      }
    },
    "int-ScanVPCS3Endpoint9ADCF3F1": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".s3"
            ]
          ]
        },
        "VpcId": {
          "Ref": "int-ScanVPC274279B8"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "int-VirusDefsBucketF9FCA9B6",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "int-VirusDefsBucketF9FCA9B6",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "int-ServerlessClamscanServiceRoleE8DCB3FD",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":sts::",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":assumed-role/",
                        {
                          "Ref": "int-ServerlessClamscanServiceRoleE8DCB3FD"
                        },
                        "/",
                        {
                          "Ref": "int-ServerlessClamscan04BE3FCD"
                        }
                      ]
                    ]
                  }
                ]
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "wfdmclamavbucket78961613",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "wfdmclamavbucket78961613",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "int-ServerlessClamscanServiceRoleE8DCB3FD",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":sts::",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":assumed-role/",
                        {
                          "Ref": "int-ServerlessClamscanServiceRoleE8DCB3FD"
                        },
                        "/",
                        {
                          "Ref": "int-ServerlessClamscan04BE3FCD"
                        }
                      ]
                    ]
                  }
                ]
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "wfdmclamavbucket78961613",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RouteTableIds": [
          {
            "Ref": "int-ScanVPCIsolatedSubnet1RouteTableEB7F0394"
          },
          {
            "Ref": "int-ScanVPCIsolatedSubnet2RouteTableF6DB720F"
          }
        ],
        "VpcEndpointType": "Gateway"
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanVPC/S3Endpoint/Resource"
      }
    },
    "int-ScanFileSystemSecurityGroupFFD6906F": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "WfdmClamavStack/int-/ScanFileSystemSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86
          }
        ],
        "VpcId": {
          "Ref": "int-ScanVPC274279B8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanFileSystemSecurityGroup/Resource"
      }
    },
    "int-ScanFileSystemSecurityGroupfromWfdmClamavStackint-ServerlessClamscanSecurityGroup062DDF0720496790AC3C": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from WfdmClamavStackint-ServerlessClamscanSecurityGroup062DDF07:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "int-ScanFileSystemSecurityGroupFFD6906F",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "int-ServerlessClamscanSecurityGroupAE057082",
            "GroupId"
          ]
        },
        "ToPort": 2049
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanFileSystemSecurityGroup/from WfdmClamavStackint-ServerlessClamscanSecurityGroup062DDF07:2049"
      }
    },
    "int-ScanFileSystemE829A5B5": {
      "Type": "AWS::EFS::FileSystem",
      "Properties": {
        "Encrypted": true,
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "WfdmClamavStack/int-/ScanFileSystem"
          }
        ],
        "LifecyclePolicies": [
          {
            "TransitionToIA": "AFTER_7_DAYS"
          }
        ],
        "PerformanceMode": "generalPurpose"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanFileSystem/Resource"
      }
    },
    "int-ScanFileSystemEfsMountTarget16207364B": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "int-ScanFileSystemE829A5B5"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "int-ScanFileSystemSecurityGroupFFD6906F",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "int-ScanVPCIsolatedSubnet1Subnet7556D83D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanFileSystem/EfsMountTarget1"
      }
    },
    "int-ScanFileSystemEfsMountTarget2888A39DA": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "int-ScanFileSystemE829A5B5"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "int-ScanFileSystemSecurityGroupFFD6906F",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "int-ScanVPCIsolatedSubnet2Subnet0DC705B8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanFileSystem/EfsMountTarget2"
      }
    },
    "int-ScanFileSystemScanLambdaAP2A210B30": {
      "Type": "AWS::EFS::AccessPoint",
      "Properties": {
        "FileSystemId": {
          "Ref": "int-ScanFileSystemE829A5B5"
        },
        "PosixUser": {
          "Gid": "1000",
          "Uid": "1000"
        },
        "RootDirectory": {
          "CreationInfo": {
            "OwnerGid": "1000",
            "OwnerUid": "1000",
            "Permissions": "755"
          },
          "Path": "/lambda"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ScanFileSystem/ScanLambdaAP/Resource"
      }
    },
    "VirusDefsAccessLogsBucket${var.env}": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "LogFilePrefix": "access-logs-bucket-logs"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/VirusDefsAccessLogsBucket/Resource"
      }
    },
    "int-VirusDefsAccessLogsBucketPolicy7C68F4E3": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "int-VirusDefsAccessLogsBucketC4C89A8B"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "int-VirusDefsAccessLogsBucketC4C89A8B",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "int-VirusDefsAccessLogsBucketC4C89A8B",
                    "Arn"
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/VirusDefsAccessLogsBucket/Policy/Resource"
      }
    },
    "int-VirusDefsBucketF9FCA9B6": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "int-VirusDefsAccessLogsBucketC4C89A8B"
          }
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/VirusDefsBucket/Resource"
      }
    },
    "int-VirusDefsBucketPolicyCB3D0830": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "int-VirusDefsBucketF9FCA9B6"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "int-VirusDefsBucketF9FCA9B6",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "int-VirusDefsBucketF9FCA9B6",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "int-VirusDefsBucketF9FCA9B6",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "int-VirusDefsBucketF9FCA9B6",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:SourceVpce": {
                    "Ref": "int-ScanVPCS3Endpoint9ADCF3F1"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "int-VirusDefsBucketF9FCA9B6",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "int-VirusDefsBucketF9FCA9B6",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:DeleteBucketPolicy"
              ],
              "Effect": "Deny",
              "NotPrincipal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "int-VirusDefsBucketF9FCA9B6",
                  "Arn"
                ]
              }
            },
            {
              "Action": "s3:PutObject*",
              "Effect": "Deny",
              "NotPrincipal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "int-DownloadDefsServiceRole0AF60566",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":sts::",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":assumed-role/",
                        {
                          "Ref": "int-DownloadDefsServiceRole0AF60566"
                        },
                        "/",
                        {
                          "Ref": "int-DownloadDefsB814EDC8"
                        }
                      ]
                    ]
                  }
                ]
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "int-VirusDefsBucketF9FCA9B6",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/VirusDefsBucket/Policy/Resource"
      }
    },
    "int-VirusDefsBucketAutoDeleteObjectsCustomResourceC50D8C33": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "int-VirusDefsBucketF9FCA9B6"
        }
      },
      "DependsOn": [
        "int-VirusDefsBucketPolicyCB3D0830"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/VirusDefsBucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "int-ServerlessClamscanServiceRoleE8DCB3FD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      },
      "DependsOn": [
        "int-ScanFileSystemEfsMountTarget16207364B",
        "int-ScanFileSystemEfsMountTarget2888A39DA"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ServerlessClamscan/ServiceRole/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "The AWSLambdaBasicExecutionRole does not provide permissions beyond uploading logs to CloudWatch. The AWSLambdaVPCAccessExecutionRole is required for functions with VPC access to manage elastic network interfaces."
            }
          ]
        }
      }
    },
    "int-ServerlessClamscanServiceRoleDefaultPolicyFDB45ADC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "elasticfilesystem:ClientMount",
              "Condition": {
                "StringEquals": {
                  "elasticfilesystem:AccessPointArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":elasticfilesystem:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":access-point/",
                        {
                          "Ref": "int-ScanFileSystemScanLambdaAP2A210B30"
                        }
                      ]
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "elasticfilesystem:ClientWrite",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":elasticfilesystem:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":file-system/",
                    {
                      "Ref": "int-ScanFileSystemE829A5B5"
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "int-Queue4193FD3B",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "int-VirusDefsBucketF9FCA9B6",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "int-VirusDefsBucketF9FCA9B6",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "wfdmclamavbucket78961613",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "wfdmclamavbucket78961613",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "wfdmclamavbucket78961613",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "int-ServerlessClamscanServiceRoleDefaultPolicyFDB45ADC",
        "Roles": [
          {
            "Ref": "int-ServerlessClamscanServiceRoleE8DCB3FD"
          }
        ]
      },
      "DependsOn": [
        "int-ScanFileSystemEfsMountTarget16207364B",
        "int-ScanFileSystemEfsMountTarget2888A39DA"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ServerlessClamscan/ServiceRole/DefaultPolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The EFS mount point permissions are controlled through a condition which limit the scope of the * resources."
            }
          ]
        }
      }
    },
    "int-ServerlessClamscanSecurityGroupAE057082": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function WfdmClamavStackint-ServerlessClamscan83132138",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow outbound HTTPS traffic for S3 access.",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "VpcId": {
          "Ref": "int-ScanVPC274279B8"
        }
      },
      "DependsOn": [
        "int-ScanFileSystemEfsMountTarget16207364B",
        "int-ScanFileSystemEfsMountTarget2888A39DA"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ServerlessClamscan/SecurityGroup/Resource"
      }
    },
    "int-ServerlessClamscanSecurityGrouptoWfdmClamavStackint-ScanFileSystemSecurityGroup1D29EBD520498FA9C67E": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "int-ServerlessClamscanSecurityGroupAE057082",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to WfdmClamavStackint-ScanFileSystemSecurityGroup1D29EBD5:2049",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "int-ScanFileSystemSecurityGroupFFD6906F",
            "GroupId"
          ]
        },
        "FromPort": 2049,
        "ToPort": 2049
      },
      "DependsOn": [
        "int-ScanFileSystemEfsMountTarget16207364B",
        "int-ScanFileSystemEfsMountTarget2888A39DA"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ServerlessClamscan/SecurityGroup/to WfdmClamavStackint-ScanFileSystemSecurityGroup1D29EBD5:2049"
      }
    },
    "int-ServerlessClamscan04BE3FCD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ImageUri": {
            "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:b10298b69dd7de76fed3250f41b0448ad46c2fdbea69f1c891e360f68aa5b741"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "int-ServerlessClamscanServiceRoleE8DCB3FD",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "EFS_MOUNT_PATH": "/mnt/lambda",
            "EFS_DEF_PATH": "virus_database/",
            "DEFS_URL": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::GetAtt": [
                      "int-VirusDefsBucketF9FCA9B6",
                      "RegionalDomainName"
                    ]
                  }
                ]
              ]
            },
            "POWERTOOLS_METRICS_NAMESPACE": "serverless-clamscan",
            "POWERTOOLS_SERVICE_NAME": "virus-scan"
          }
        },
        "FileSystemConfigs": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":access-point/",
                  {
                    "Ref": "int-ScanFileSystemScanLambdaAP2A210B30"
                  }
                ]
              ]
            },
            "LocalMountPath": "/mnt/lambda"
          }
        ],
        "MemorySize": 10240,
        "PackageType": "Image",
        "Timeout": 900,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "int-ServerlessClamscanSecurityGroupAE057082",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "int-ScanVPCIsolatedSubnet1Subnet7556D83D"
            },
            {
              "Ref": "int-ScanVPCIsolatedSubnet2Subnet0DC705B8"
            }
          ]
        }
      },
      "DependsOn": [
        "int-ScanFileSystemEfsMountTarget16207364B",
        "int-ScanFileSystemEfsMountTarget2888A39DA",
        "int-ScanFileSystemSecurityGroupfromWfdmClamavStackint-ServerlessClamscanSecurityGroup062DDF0720496790AC3C",
        "int-ServerlessClamscanSecurityGrouptoWfdmClamavStackint-ScanFileSystemSecurityGroup1D29EBD520498FA9C67E",
        "int-ServerlessClamscanServiceRoleDefaultPolicyFDB45ADC",
        "int-ServerlessClamscanServiceRoleE8DCB3FD"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ServerlessClamscan/Resource",
        "aws:asset:path": "asset.b10298b69dd7de76fed3250f41b0448ad46c2fdbea69f1c891e360f68aa5b741",
        "aws:asset:dockerfile-path": "Dockerfile",
        "aws:asset:docker-build-args": {
          "CACHE_DATE": "Tue Feb 08 2022"
        },
        "aws:asset:property": "Code.ImageUri"
      }
    },
    "int-ServerlessClamscanEventInvokeConfig18DD4DB9": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "int-ServerlessClamscan04BE3FCD"
        },
        "Qualifier": "$LATEST",
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "int-Queue4193FD3B",
                "Arn"
              ]
            }
          },
          "OnSuccess": {
            "Destination": {
              "Fn::GetAtt": [
                "int-Queue4193FD3B",
                "Arn"
              ]
            }
          }
        }
      },
      "DependsOn": [
        "int-ScanFileSystemEfsMountTarget16207364B",
        "int-ScanFileSystemEfsMountTarget2888A39DA"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/ServerlessClamscan/EventInvokeConfig/Resource"
      }
    },
    "int-DownloadDefsServiceRole0AF60566": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/DownloadDefs/ServiceRole/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "The AWSLambdaBasicExecutionRole does not provide permissions beyond uploading logs to CloudWatch."
            }
          ]
        }
      }
    },
    "int-DownloadDefsServiceRoleDefaultPolicy61023B5A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "int-VirusDefsBucketF9FCA9B6",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "int-VirusDefsBucketF9FCA9B6",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "int-DownloadDefsServiceRoleDefaultPolicy61023B5A",
        "Roles": [
          {
            "Ref": "int-DownloadDefsServiceRole0AF60566"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/DownloadDefs/ServiceRole/DefaultPolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The function is allowed to perform operations on all prefixes in the specified bucket."
            }
          ]
        }
      }
    },
    "int-DownloadDefsB814EDC8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ImageUri": {
            "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:3d3df8ef288aa1e2629876b81141ad355daa0f67e542a7da3bfe1370c0f58841"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "int-DownloadDefsServiceRole0AF60566",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "DEFS_BUCKET": {
              "Ref": "int-VirusDefsBucketF9FCA9B6"
            },
            "POWERTOOLS_SERVICE_NAME": "freshclam-update"
          }
        },
        "MemorySize": 1024,
        "PackageType": "Image",
        "Timeout": 300
      },
      "DependsOn": [
        "int-DownloadDefsServiceRoleDefaultPolicy61023B5A",
        "int-DownloadDefsServiceRole0AF60566"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/DownloadDefs/Resource",
        "aws:asset:path": "asset.3d3df8ef288aa1e2629876b81141ad355daa0f67e542a7da3bfe1370c0f58841",
        "aws:asset:dockerfile-path": "Dockerfile",
        "aws:asset:docker-build-args": {
          "CACHE_DATE": "Tue Feb 08 2022"
        },
        "aws:asset:property": "Code.ImageUri"
      }
    },
    "int-VirusDefsUpdateRuleB7616D88": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(12 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "int-DownloadDefsB814EDC8",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/VirusDefsUpdateRule/Resource"
      }
    },
    "int-VirusDefsUpdateRuleAllowEventRuleWfdmClamavStackint-DownloadDefsC262EED3CE3B39E7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "int-DownloadDefsB814EDC8",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "int-VirusDefsUpdateRuleB7616D88",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/VirusDefsUpdateRule/AllowEventRuleWfdmClamavStackint-DownloadDefsC262EED3"
      }
    },
    "int-InitDefsServiceRole8D560CCE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/InitDefs/ServiceRole/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "The AWSLambdaBasicExecutionRole does not provide permissions beyond uploading logs to CloudWatch."
            }
          ]
        }
      }
    },
    "int-InitDefsServiceRoleDefaultPolicy7E584CD5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "int-DownloadDefsB814EDC8",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "int-InitDefsServiceRoleDefaultPolicy7E584CD5",
        "Roles": [
          {
            "Ref": "int-InitDefsServiceRole8D560CCE"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/InitDefs/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "int-InitDefsBBD9C427": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "7d289f9862096a0365073560bf6f447a02ebc74681e6aa4baaaa3a61c8e53bac.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "int-InitDefsServiceRole8D560CCE",
            "Arn"
          ]
        },
        "Handler": "lambda.lambda_handler",
        "Runtime": "python3.8",
        "Timeout": 300
      },
      "DependsOn": [
        "int-InitDefsServiceRoleDefaultPolicy7E584CD5",
        "int-InitDefsServiceRole8D560CCE"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/InitDefs/Resource",
        "aws:asset:path": "asset.7d289f9862096a0365073560bf6f447a02ebc74681e6aa4baaaa3a61c8e53bac",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "int-InitDefsCrEF941FF2": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "int-InitDefsBBD9C427",
            "Arn"
          ]
        },
        "FnName": {
          "Ref": "int-DownloadDefsB814EDC8"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/int-/InitDefsCr/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "int-VirusDefsBucketF9FCA9B6"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
        "aws:asset:path": "asset.bdb08b9984816ecf43301a0c6d8913e270ee2448940b6b95e430dd222a4d90be",
        "aws:asset:property": "Code"
      }
    },
    "wfdmclamavbucket78961613": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/wfdm-clamav-bucket/Resource"
      }
    },
    "wfdmclamavbucketPolicyEDDB38F5": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "wfdmclamavbucket78961613"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "wfdmclamavbucket78961613",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "wfdmclamavbucket78961613",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "s3:GetObject",
              "Condition": {
                "StringEquals": {
                  "s3:ExistingObjectTag/scan-status": [
                    "IN PROGRESS",
                    "INFECTED",
                    "ERROR"
                  ]
                }
              },
              "Effect": "Deny",
              "NotPrincipal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "int-ServerlessClamscanServiceRoleE8DCB3FD",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":sts::",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":assumed-role/",
                        {
                          "Ref": "int-ServerlessClamscanServiceRoleE8DCB3FD"
                        },
                        "/",
                        {
                          "Ref": "int-ServerlessClamscan04BE3FCD"
                        }
                      ]
                    ]
                  }
                ]
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "wfdmclamavbucket78961613",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/wfdm-clamav-bucket/Policy/Resource"
      }
    },
    "wfdmclamavbucketAutoDeleteObjectsCustomResource0164C3B1": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "wfdmclamavbucket78961613"
        }
      },
      "DependsOn": [
        "wfdmclamavbucketPolicyEDDB38F5"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/wfdm-clamav-bucket/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "wfdmclamavbucketNotifications5CF4CD92": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "wfdmclamavbucket78961613"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "int-ServerlessClamscan04BE3FCD",
                  "Arn"
                ]
              }
            }
          ]
        },
        "Managed": true
      },
      "DependsOn": [
        "wfdmclamavbucketAllowBucketNotificationsToWfdmClamavStackint-ServerlessClamscan8313213860063E1E"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/wfdm-clamav-bucket/Notifications/Resource"
      }
    },
    "wfdmclamavbucketAllowBucketNotificationsToWfdmClamavStackint-ServerlessClamscan8313213860063E1E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "int-ServerlessClamscan04BE3FCD",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "wfdmclamavbucket78961613",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/wfdm-clamav-bucket/AllowBucketNotificationsToWfdmClamavStackint-ServerlessClamscan83132138"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n    response_status = \"SUCCESS\"\n    error_message = \"\"\n    try:\n        props = event[\"ResourceProperties\"]\n        bucket = props[\"BucketName\"]\n        notification_configuration = props[\"NotificationConfiguration\"]\n        request_type = event[\"RequestType\"]\n        managed = props.get('Managed', 'true').lower() == 'true'\n        stack_id = event['StackId']\n\n        if managed:\n          config = handle_managed(request_type, notification_configuration)\n        else:\n          config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n        put_bucket_notification_configuration(bucket, config)\n    except Exception as e:\n        logging.exception(\"Failed to put bucket notification configuration\")\n        response_status = \"FAILED\"\n        error_message = f\"Error: {str(e)}. \"\n    finally:\n        submit_response(event, context, response_status, error_message)\n\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n\n  # find external notifications\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  # if delete, that's all we need\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  # otherwise, merge external with incoming config and augment with id\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n  return notifications\n\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    # if the notification was created by us, we know what id to expect\n    # so we can filter by it.\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  return external_notifications\n\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n    response_body = json.dumps(\n        {\n            \"Status\": response_status,\n            \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n            \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n            \"StackId\": event[\"StackId\"],\n            \"RequestId\": event[\"RequestId\"],\n            \"LogicalResourceId\": event[\"LogicalResourceId\"],\n            \"NoEcho\": False,\n        }\n    ).encode(\"utf-8\")\n    headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n    try:\n        req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n        with urllib.request.urlopen(req) as response:\n            print(response.read().decode(\"utf-8\"))\n        print(\"Status code: \" + response.reason)\n    except Exception as e:\n        print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31Sy27bMBD8ltxptnYK9Oy4dmAgRVU5yDWgqbWwscRVuaQMQdC/l6SsKEmLnHZmuNzHkCu5XMmvN+rCC12cFxUeZX9wSp9FkJ57/sOy/+3Bg9icTAKDAL2S/VOjo/SUbURmsVUODv5owEVxRjl5B4/qWMGsz9qamTQqh2TErqLLA5UxbYL3oehFdaHT1hQNoXHXjq/0ANpbdN29Jd+kDp8Ke1NaYP5H3yZ5EKhq2ec0DptiRhXqLtIRDaKiMlgSxnttMeFgzCkc7bCCQ8cO6rTLO/aTvHGPypbBnbXWoWk2rfWGDoJvZX/n9Xk08YrGME/0jo/kTnF4n0rVx0LJ/gcFze5rVcLOG51sjiNNeNuCcXvT0hk2ZE6YzP+vmIGtkTm90/V2/Ab2WTGDY/mm0zoq8Uzm0BCjI9vFsQTEwsGf3F/9DTFuOtVIFweRA5O3OqR4dlTPNNyYcEoNv7REU37Iyyy1WICN+b+8a3xyMGxS4Di1oQLkC39pl9/k8ru8vXlhxIUN74I1yHyMfwE0JFWMFgMAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "WfdmClamavStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "oBucketName": {
      "Description": "The name of the input S3 Bucket",
      "Value": {
        "Ref": "wfdmclamavbucket78961613"
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}